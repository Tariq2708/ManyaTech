"""
Django settings for photoframe project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Security key for production - keep this key secret!
SECRET_KEY = 'django-insecure-bhb%jfz5$6s+4qhj&jb@f_)b)w(d-h+j$%^^(%%u146g!giagw'

# Debug mode - turn off in production
DEBUG = True

# Hosts/domain names that are valid for this site; needed for deployment
ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',          # Admin interface
    'django.contrib.auth',           # Authentication system
    'django.contrib.contenttypes',   # Content types framework
    'django.contrib.sessions',       # Session framework
    'django.contrib.messages',       # Messaging framework
    'django.contrib.staticfiles',    # Static files management
    'corsheaders',                   # Handling Cross-Origin Resource Sharing (CORS)
    'rest_framework',                # Django REST framework for building APIs
    'frames',                        # Custom app for managing photo frames
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',     # Security middleware
    'django.contrib.sessions.middleware.SessionMiddleware', # Session management
    'django.middleware.common.CommonMiddleware',         # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',         # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Authentication
    'django.contrib.messages.middleware.MessageMiddleware', # Messaging
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Clickjacking protection
    'corsheaders.middleware.CorsMiddleware',             # Middleware for handling CORS
]

ROOT_URLCONF = 'photoframe.urls'  # Root URL configuration

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,  # Automatically looks for templates in app directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'photoframe.wsgi.application'  # WSGI application for serving the project

# Database configuration - using SQLite for development
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # SQLite database engine
        'NAME': BASE_DIR / 'db.sqlite3',         # Database file
    }
}

# Password validation - enforcing strong passwords
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization settings
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files configuration
STATIC_URL = '/static/'

# Media files configuration - handling user uploads
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# CORS settings to allow requests from the React frontend
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # React development server
]

# Allow all origins - useful for development
CORS_ALLOW_ALL_ORIGINS = True

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
